#include "String.h"

void EXPECT_TRUE(bool data);
void EXPECT_FALSE(bool data);
void EXPECT_EQ(const char *str1, const char *str2, int size);
void EXPECT_EQ(int int1, int int2);
void getSize();
void getString();
void emptyConstructor();
void copyConstructorFilled();
void copyConstructorEmpty();
void literalConstructor();
void compEqual();
void compDifferent();
void compEqualWithFunc();
void compDifferentWithFunc();
void trimEmpty();
void trimNothingToTrim();
void trimRight();
void trimLeft();
void trimBothSides();
void toUpperEmpty();
void toUpperAllLow();
void toUpperAllUp();
void toUpperMixed();
void toLowerEmpty();
void toLowerAllLow();
void toLowerAllUp();
void toLowerMixed();
void searchCharSuccess();
void searchCharFailed();
void searchStringSuccess();
void searchStringFailed();
void prefixFound();
void prefixNonexistent();
void sufixFound();
void sufixNonexistent();
void insertCharEmptyFirstPos();
void insertCharEmptyOtherPos();
void insertCharOutOfBound();
void insertCharCasual();
void insertStringEmptyFirstPos();
void insertStringEmptyOtherPos();
void insertStringOutOfBound();
void insertStringCasual();
void replaceCharNonexistent();
void replaceCharAll();
void replaceStringNonexistent();
void replaceStringAll();
void replaceByHigher();
void replaceByLesser();
void removeCharEmpty();
void removeCharOutOfBound();
void removeCharCasual();
void removeStringEmpty();
void removeStringOutOfBound();
void removeStringCasual();
void appendEmpty();
void appendCasual();
void splitCharNonexistent();
void splitCharCasual();
void splitStringNonexistent();
void splitStringCasual();
void write();
void writeLine();
void printCorrectly();